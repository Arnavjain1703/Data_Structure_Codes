Given an array of integers, find the length of the longest (strictly) increasing subsequence from the given array.

Example 1:

Input:
N = 16
A[]={0,8,4,12,2,10,6,14,1,9,5
     13,3,11,7,15}
Output: 6
Explanation:Longest increasing subsequence
0 2 6 9 13 15, which has length 6


int longestSubsequence(int n, int a[])
    {
       vector<int>dp;
       dp.push_back(a[0]);
       for(int i=1;i<n;i++)
       {
           int X=lower_bound(dp.begin(),dp.end(),a[i])-dp.begin();
           if(X>(dp.size()-1))
           {
               dp.push_back(a[i]);
           }
           else
           {
               dp[X]=a[i];
           }
       }
       return dp.size();
    }