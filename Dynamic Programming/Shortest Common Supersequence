
Given two strings X and Y of lengths m and n respectively, find the length of the smallest string which has both, X and Y as its sub-sequences.
Note: X and Y can have both uppercase and lowercase letters.

Example 1

Input:
X = abcd, Y = xycd
Output: 6
Explanation: Shortest Common Supersequence
would be abxycd which is of length 6 and
has both the strings as its subsequences


int shortestCommonSupersequence(char* X, char* Y, int m, int n)
    {
        int dp[m+1][n+1];
        for(int i=0;i<=n;i++)
        {
            dp[0][i]=i;
        }
        for(int i=0;i<=m;i++)
        {
            dp[i][0]=i;
        }
        for(int i=1;i<=m;i++)
        {
            for(int j=1;j<=n;j++)
            {
                if((*(X+i-1))==(*(Y+j-1)))
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j]=min(dp[i-1][j],dp[i][j-1])+1;
                }
            }
        }
        return dp[m][n];
    }