Given a string S, the task is to count number of subsequences of the form aibjck, where i >= 1, j >=1 and k >= 1.

Note: 
1. Two subsequences are considered different if the set of array indexes picked for the 2 subsequences are different.
2.  For large test cases, output value will be too large, return the answer MODULO 10^9+7

 

Example 1:

Input:
S = "abbc"
Output: 3
Explanation: Subsequences are abc, abc and abbc.


 int mod=1000000007;
    int fun(string &s) {
        int arr[3][s.length()];
            for(int j=0;j<s.length();j++)
            {
                if(j==0 && s[j]=='a')
                {
                    arr[0][j]=1;
                }
                else if(j==0)
                {
                    arr[0][j]=0;
                }
                else if(s[j]=='a')
                {
                    arr[0][j]=(2*(arr[0][j-1]%mod)+1)%mod;
                }
                else 
                {
                    arr[0][j]=arr[0][j-1];
                }
            }
            arr[1][0]=0;
            for(int j=1;j<s.length();j++)
            {
               
                if(s[j]=='b')
                {
                   arr[1][j]=((2*(arr[1][j-1]%mod))%mod+arr[0][j-1])%mod;
                }
                else 
                {
                    arr[1][j]=arr[1][j-1];
                }
            }
            arr[2][0]=0;
            arr[2][1]=0;
            for(int j=2;j<s.length();j++)
            {
                
                if(s[j]=='c')
                {
                    arr[2][j]=((2*(arr[2][j-1]%mod)%mod)+arr[1][j-1])%mod;
                }
                else
                {
                    arr[2][j]=arr[2][j-1];
                }
            }
            return arr[2][s.length()-1];
    }