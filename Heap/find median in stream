Given an input stream of N integers. The task is to insert these numbers into a new stream and find the median of the stream formed by each insertion of X to the new stream.

Example 1:

Input:
N = 4
X[] = 5,15,1,3
Output:
5
10
5
4
Explanation:Flow in stream : 5, 15, 1, 3 
5 goes to stream --> median 5 (5) 
15 goes to stream --> median 10 (5,15) 
1 goes to stream --> median 5 (5,15,1) 
3 goes to stream --> median 4 (5,15,1 3) 
 



    priority_queue<int>A;
    priority_queue<int,vector<int>,greater<int>>B;
    void insertHeap(int &x)
    {
        if(A.size()<=B.size())
        {
            if(A.size()==0)
            {
                A.push(x);
            }
            else
            {
                int y=B.top();
                B.pop();
                B.push(max(x,y));
                A.push(min(x,y));
            }
        }
        else
        {
               int y=A.top();
                A.pop();
                B.push(max(x,y));
                A.push(min(x,y));
        }
    }
    //Function to return Median.
    double getMedian()
    {
        if(A.size()==B.size())
        {
            return (A.top()+B.top())/2;
        }
        else
        {
            return A.top();
        }
    }