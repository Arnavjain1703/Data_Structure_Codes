Given an unsorted array A of size N that contains only non-negative integers, find a continuous sub-array which adds to a given number S.

 

Example 1:

Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output: 2 4
Explanation: The sum of elements 
from 2nd position to 4th position 
is 12.

class Solution{
    public:
    // Function to find the subarray with given sum k
    // arr: input array
    // n: size of array
    vector<int> subarraySum(int arr[], int n, int s){
       int low=0;
       int high=0;
       int sum=arr[0];
       while((low<n)&&(high<n))
       {
           if(sum==s)
           {
               return {low+1,high+1};
           }
           else if(sum<s)
           {
               high++;
               sum=sum+arr[high];
           }
           else
           {
               sum-=arr[low];
               low++;
           }
       }
       return {-1};
    }
};