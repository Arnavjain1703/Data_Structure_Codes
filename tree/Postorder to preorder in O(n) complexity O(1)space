Given an array arr[] of N nodes representing preorder traversal of BST. The task is to print its postorder traversal.

Example 1:

Input:
N = 5
arr[]  = {40,30,35,80,100}
Output: 35 30 100 80 40
Explanation: PreOrder: 40 30 35 80 100
InOrder: 30 35 40 80 100
Therefore, the BST will be:
              40
           /      \
         30       80
           \        \   
           35      100
Hence, the postOrder traversal will
be: 35 30 100 80 40


Node* Set(int S,int E,int pre[])
{
    if(S>E)
    {
        return NULL;
    }
    int j=E;
    for(int i=S+1;i<=E;i++)
    {
        if(pre[S]<pre[i])
        {
            j=i-1;
            break;
        }
    }
    Node*Curr=newNode(pre[S]);
    Curr->left=Set(S+1,j,pre);
    Curr->right=Set(j+1,E,pre);
    return Curr;
}
Node* constructTree(int pre[], int size)
{
       return Set(0,size-1,pre);
}