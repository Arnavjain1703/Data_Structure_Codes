Serialization is to store a tree in an array so that it can be later restored and Deserialization is reading tree back from the array. Now your task is to complete the function serialize which stores the tree into an array A[ ] and deSerialize which deserializes the array to tree and returns it.
Note: The structure of tree must be maintained.

Example 1:

Input:
      1
    /   \
   2     3
Output: 2 1 3


    void Max(Node*root,int*M)
    {
        if(root==NULL)
        {
            return;
        }
        *M=max(*M,root->data);
        Max(root->left,M);
        Max(root->right,M);
    }
    void set(Node*root,vector<int>&A)
    {
        if(root==NULL)
        {
           A.push_back(-1);
           return;
        }
        A.push_back(root->data);
        set(root->left,A);
        set(root->right,A);
    }
    vector<int> serialize(Node *root) 
    {
       vector<int>A;    
       set(root,A);
       return A;
    }
    
    
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &A)
    {  
       if(A[M]==-1 || M==A.size())
       {
           M++;
           return NULL;
       }
       Node*root=new Node(A[M]);
       M++;
       root->left=deSerialize(A);
       root->right=deSerialize(A);
       return root;
    }