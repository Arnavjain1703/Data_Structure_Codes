public:
    //Function to convert an infix expression to a postfix expression.
    int is(char S)
    {
            if(S=='^')
            {
                return 3;
            }
            else if(S=='*'||S=='/' || S=='%')
            {
                return 2;
            }
            else if(S=='+'||S=='-')
            {
                return 1;
            }
            else
            {
                return -1;
            }
    }
    string infixToPostfix(string s)
    {
       string postfix="";
       
        stack<char>S;
        for(int i=0;i<s.length();i++)
        {
          
           if(s[i]=='(')
           {
               S.push('(');
           }
           else if(s[i]>=97 && s[i]<=122)
           {
               postfix+=s[i];
           }
           else if(s[i]==')')
           {
               while(S.top()!='(')
               {
                   postfix+=S.top();
                   S.pop();
               }
               S.pop();
           }
           else
           {
              while(!S.empty() && is(s[i])<=is(S.top()))
              {
                  postfix+=S.top();
                  S.pop();
              }
              S.push(s[i]);
           }
        }
        while(!S.empty())
        { 
            postfix+=S.top();
            S.pop();
        }
        return postfix;
    }