map<int,int>A;
map<int,int,greater<int>>A;

on applying for loop in A;
this will give a sorted value according to x.first;

==============================================================================================================
                 
                           Get Vector of Pair Sorted According to Second Element of map 

bool mycomp(pair<char,ll>p1,pair<char,ll>p2)
{
  return p1.second>p2.second;
} 
vector<pair<char,ll>>sort(map<char,ll>A)
{
    vector<pair<char,ll>>C;
    for(auto X:A)
    {
      C.push_back(X);
    }
    sort(C.begin(),C.end(),mycomp);
    return C;
}

==============================================================================================================
                                  Convert String to Upper case

void solve()
{  
  string my_str = "sfkjbv";

   cout << "Main string: " << my_str << endl;
   transform(my_str.begin(), my_str.end(), my_str.begin(), ::toupper);

   cout << "Converted String: " << my_str;
}

==============================================================================================================
                                         Convert String to Lower case

void solve()
{  
  string my_str = "sfkjbv";

   cout << "Main string: " << my_str << endl;
   transform(my_str.begin(), my_str.end(), my_str.begin(), ::tolower);

   cout << "Converted String: " << my_str;
}

=============================================================================================================
					LOWER Bound of Number In vector;

low1 = lower_bound(v.begin(), v.end(), 30);
=============================================================================================================
 					Erase Element from Vector;
v.erase(v.begin()+i);

=============================================================================================================
void decToBinary(int n) 
{ 
    // array to store binary number 
    int binaryNum[32]; 
  
    // counter for binary array 
    int i = 0; 
    while (n > 0) { 
  
        // storing remainder in binary array 
        binaryNum[i] = n % 2; 
        n = n / 2; 
        i++; 
    } 
  
    // printing binary array in reverse order 
    for (int j = i - 1; j >= 0; j--) 
        cout << binaryNum[j]; 
} 