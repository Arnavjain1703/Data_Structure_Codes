Given an array arr[] denoting heights of N towers and a positive integer K, you have to modify the height of each tower either by increasing or decreasing them by K only once. After modifying, height should be a non-negative integer. 
Find out what could be the possible minimum difference of the height of shortest and longest towers after you have modified each tower.

A slight modification of the problem can be found here.


Example 1:

Input:
K = 2, N = 4
Arr[] = {1, 5, 8, 10}
Output:
5
Explanation:
The array can be modified as 
{3, 3, 6, 8}. The difference between 
the largest and the smallest is 8-3 = 5.


 int getMinDiff(int arr[], int n, int K) {
       sort(arr,arr+n);
       int Min=arr[0];
       int Max=arr[n-1];
       int result=Max-Min;
       sort(arr,arr+n);
       for(int i=1;i<n;i++)
       {
           if(arr[i]>=K)
           {
               int M=max(arr[i-1]+K,Max-K);
               int m=min(arr[i]-K,Min+K);
               result=min(result,abs(M-m));
           }
       }
       return result;
    }